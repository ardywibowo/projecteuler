# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with $1$ and $2$, the first $10$ terms will be:
# $$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \dots$$
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

cache = {}
def fibonacci(n):
    if n in cache:
        return cache[n]
    
    if n <= 2:
        return 1
    
    result = fibonacci(n-1) + fibonacci(n-2)
    cache[n] = result
    return result

upper_bound = 4000000
i = 0
total = 0

current_val = float("-inf")
while current_val <= upper_bound:
    current_val = fibonacci(i)
    if current_val % 2 == 0:
        total += current_val
    i += 1

print("Total:", total)
